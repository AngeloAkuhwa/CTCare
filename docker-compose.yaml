services:
    db:
        image: postgres:16-alpine
        restart: always
        container_name: ctcare_db
        environment:
            POSTGRES_DB: ${PG_DB}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_PASSWORD: ${PG_PASSWORD}
        ports:
            - "${PG_PORT}:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
            interval: 5s
            timeout: 3s
            retries: 20
        volumes:
            - pgdata:/var/lib/postgresql/data

    redis:
        image: redis:7-alpine
        container_name: ctcare_redis
        command: ["redis-server", "--appendonly", "yes"]
        ports:
            - "${REDIS_PORT}:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 20
        volumes:
            - redisdata:/data

    api:
        build:
            context: .
            dockerfile: Dockerfile # keep this if your Dockerfile lives here
        container_name: ctcare_api
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        environment:
            ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
            # App settings (match your Program.cs binding)
            ConnectionStrings__DefaultConnection: ${DB_CONNECTION_STRING}
            RedisSetting__ConnectionString: ${REDIS_CONNECTION_STRING}
            RedisSetting__Password: ${REDIS_PASSWORD}
            RedisSetting__AbortOnConnectFail: "false"
            Sentry__Dsn: ${SENTRY_KEY}
            Auth__ApiKeys__0: ${API_KEY}
            RateLimiting__RequestsPerMinute: ${RATE_LIMIT_REQUESTS_PER_MINUTE}
            RateLimiting__Burst: ${RATE_LIMIT_BURST}

            # Auth
            Auth__OtpLength: ${Auth__OtpLength:-6}
            Auth__OtpExpiry: ${Auth__OtpExpiry:-00:10:00}
            Auth__MaxFailedAttempts: ${Auth__MaxFailedAttempts:-5}
            Auth__RetryWindow: ${Auth__RetryWindow:-00:10:00}
            Auth__LockoutDuration: ${Auth__LockoutDuration:-00:10:00}
            Auth__PasswordResetTokenExpiryMinutes: ${Auth__PasswordResetTokenExpiryMinutes:-00:15:00}
            Auth__RefreshTokenValidityDays: ${Auth__RefreshTokenValidityDays:-7}
            Auth__EmailConfirmTokenExpiry: ${Auth__EmailConfirmTokenExpiry:-1.00:00:00}
            Auth__EmailConfirmResendCooldown: ${Auth__EmailConfirmResendCooldown:-00:10:00}

            # AuthLimits
            AuthLimits__OtpLength__Min: ${AuthLimits__OtpLength__Min:-4}
            AuthLimits__OtpLength__Max: ${AuthLimits__OtpLength__Max:-8}
            AuthLimits__OtpExpiry__Min: ${AuthLimits__OtpExpiry__Min:-00:01:00}
            AuthLimits__OtpExpiry__Max: ${AuthLimits__OtpExpiry__Max:-00:30:00}
            AuthLimits__MaxFailedAttempts__Min: ${AuthLimits__MaxFailedAttempts__Min:-3}
            AuthLimits__MaxFailedAttempts__Max: ${AuthLimits__MaxFailedAttempts__Max:-10}
            AuthLimits__RetryWindowMin: ${AuthLimits__RetryWindowMin:-00:01:00}
            AuthLimits__LockoutDurationMin: ${AuthLimits__LockoutDurationMin:-00:01:00}
            AuthLimits__RefreshTokenValidityDays__Min: ${AuthLimits__RefreshTokenValidityDays__Min:-1}
            AuthLimits__RefreshTokenValidityDays__Max: ${AuthLimits__RefreshTokenValidityDays__Max:-90}

            JwtSettings__Secret: ${JwtSettings__Secret}
            JwtSettings__Issuer: ${JwtSettings__Issuer:-ctcare}
            JwtSettings__Audience: ${JwtSettings__Audience:-ctcare-clients}

            AppSettings__BaseUrl: ${AppSettings__BaseUrl:-http://localhost:${API_PORT:-8080}/api/v1}
            AppSettings__UIBaseUrl: ${AppSettings__UIBaseUrl:-https://ct-care.vercel.app/}
            AppSettings__SupportFromAddress: ${AppSettings__SupportFromAddress:-angeloakuhwa@gmail.com}

            Api__Keys__0: ${API_KEY:-local-dev-key-123}
            Api__KeylessPaths__0: /api/v1/auth/confirm-email
            Api__KeylessPaths__1: /api/v1/auth/reset-password
            Api__KeylessPaths__2: /api/v1/auth/register
            Api__KeylessPaths__3: /api/v1/auth/login
            Api__KeylessPaths__4: /api/v1/auth/forgot-password
            Api__KeylessPaths__5: /health
            Api__KeylessPaths__6: /swagger
            Api__KeylessPaths__7: /hangfire

            #Cors
            Cors__PolicyName: ${Cors__PolicyName}
            Cors__AllowedOrigins__0: ${Cors__AllowedOrigins__0}
            Cors__AllowedOrigins__1: ${Cors__AllowedOrigins__1}
            Cors__AllowedOrigins__2: ${Cors__AllowedOrigins__2}
            Cors__PreflightMaxAgeMinutes: ${Cors__PreflightMaxAgeMinutes}
            Cors__AllowCredentials: ${Cors__AllowCredentials}

             #Cloudinary
            Cloudinary__CloudName: ${Cloudinary__CloudName}
            Cloudinary__ApiKey: ${Cloudinary__ApiKey}
            Cloudinary__ApiSecret: ${Cloudinary__ApiSecret}
            Cloudinary__Folder: ${Cloudinary__Folder}
            Cloudinary__MaxUploadSizeBytes: ${Cloudinary__MaxUploadSizeBytes}
            Cloudinary__AllowedContentTypes__0: ${Cloudinary__AllowedContentTypes__0}
            Cloudinary__AllowedContentTypes__1: ${Cloudinary__AllowedContentTypes__1}
            Cloudinary__AllowedContentTypes__2: ${Cloudinary__AllowedContentTypes__2}
        ports:
            - "${API_PORT}:8080"

    # Optional: pgAdmin for DB GUI
    pgadmin:
        image: dpage/pgadmin4:8.12
        container_name: ctcare_pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        ports:
            - "${PGADMIN_PORT}:80"
        depends_on:
            db:
                condition: service_healthy

volumes:
    pgdata:
    redisdata:
